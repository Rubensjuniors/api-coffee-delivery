generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum PaymentMethod {
  PIX
  CASH
  CREDIT_CARD
  DEBIT_CARD
}


model User {
  id            String   @id @default(uuid())
  name          String
  email         String   @unique
  password_hash String
  created_at    DateTime @default(now())
  photo_url     String?
  roles         Role[]   @default([USER])
  Cart          Cart?
  Order         Order[]

  @@map("users")
}

model Coffee {
  id          String      @id @default(uuid())
  name        String
  description String
  photo       String
  price       Decimal
  type        String[]
  createdAt   DateTime    @default(now()) @map("created_at")
  CartItem    CartItem[]
  OrderItem   OrderItem[]
}

model Cart {
  id        String     @id @default(uuid())
  user      User       @relation(fields: [userId], references: [id])
  userId    String     @unique()
  items     CartItem[]
  createdAt DateTime   @default(now()) @map("created_at")
}

model CartItem {
  id       String @id @default(uuid())
  cart     Cart   @relation(fields: [cartId], references: [id])
  cartId   String
  coffee   Coffee @relation(fields: [coffeeId], references: [id])
  coffeeId String
  quantity Int    @default(1)
}

model Order {
  id            String         @id @default(uuid())
  user          User           @relation(fields: [userId], references: [id])
  userId        String
  items         OrderItem[]
  totalPrice    Decimal
  status        String         @default("pending")
  paymentMethod PaymentMethod
  createdAt     DateTime       @default(now()) @map("created_at")
}

model OrderItem {
  id       String @id @default(uuid())
  order    Order  @relation(fields: [orderId], references: [id])
  orderId  String
  coffee   Coffee @relation(fields: [coffeeId], references: [id])
  coffeeId String
  quantity Int    @default(1)
}